{"version":3,"sources":["images/pickUpBadgeBlank.svg","images/dropOffBadgeBlack.svg","images/pickUpBadgePresent.svg","images/dropOffBadgePresent.svg","images/pickUpBadgeError.svg","images/dropOffBadgeError.svg","components/AddressForm/AddressForm.js","images/pickUpMarker.svg","images/dropOffMarker.svg","components/MapContainer/MapContainer.js","components/Toast/Toast.js","App.js","reportWebVitals.js","index.js"],"names":["AddressForm","this","props","onChange","onKeyUp","onClick","pickUpAddress","dropOffAddress","isValidPickUp","isValidDropOff","togleDisabledButton","pickUpChangeIcon","pickUpImageValid","pickUpImageBlank","pickUpImageError","dropOffChangeIcon","dropOffImageValid","dropOffImageBlank","dropOffImageError","className","src","alt","name","placeholder","value","disabled","Component","mapStyle","position","width","height","MapContainer","pickUpLatitude","pickUpLongitude","dropOffLatitude","dropOffLongitude","google","zoom","style","center","lat","lng","initialCenter","onMarkerClick","icon","url","pickUpMarker","dropOfMarker","GoogleApiWrapper","apiKey","ToastContainer","showToast","hideToast","onSubmit","handlesubmit","type","BASEURL","App","state","requestCompleted","handleGeocodeAddress","bind","handleCreateJob","handleInputChange","showToastWhenJobCreated","event","setState","target","field","fetch","method","headers","body","JSON","stringify","address","then","response","json","data","code","latitude","longitude","console","log","preventDefault","pickup","dropoff","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f0b61fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pickUpBadgeBlank.ed2c68fd.svg\";","export default __webpack_public_path__ + \"static/media/dropOffBadgeBlack.a0d51e15.svg\";","export default __webpack_public_path__ + \"static/media/pickUpBadgePresent.9ffca82d.svg\";","export default __webpack_public_path__ + \"static/media/dropOffBadgePresent.e122e9da.svg\";","export default __webpack_public_path__ + \"static/media/pickUpBadgeError.17f2d872.svg\";","export default __webpack_public_path__ + \"static/media/dropOffBadgeError.5030f42d.svg\";","import React, { Component } from 'react';\nimport './AddressForm.scss';\nimport pickUpImageBlank from '../../../src/images/pickUpBadgeBlank.svg';\nimport dropOffImageBlank from '../../../src/images/dropOffBadgeBlack.svg';\nimport pickUpImageValid from '../../../src/images/pickUpBadgePresent.svg';\nimport dropOffImageValid from '../../../src/images/dropOffBadgePresent.svg';\nimport pickUpImageError from '../../../src/images/pickUpBadgeError.svg';\nimport dropOffImageError from '../../../src/images/dropOffBadgeError.svg';\n\n\n\nclass AddressForm extends Component {\n    render() {\n        const \n        { onChange, onKeyUp, onClick, pickUpAddress, dropOffAddress, isValidPickUp, isValidDropOff } \n        = this.props;\n\n        const togleDisabledButton = (isValidPickUp && isValidDropOff) ? 'form__button' : 'form__button disabled';\n        \n        const pickUpChangeIcon = \n        (isValidPickUp && !(pickUpAddress === '') ? pickUpImageValid \n        : !isValidPickUp && !(pickUpAddress === '') ? pickUpImageError \n        : pickUpImageBlank);\n       \n        const dropOffChangeIcon = \n        (isValidDropOff && !(dropOffAddress === '') ? dropOffImageValid \n        : !isValidDropOff && !(dropOffAddress === '') ? dropOffImageError \n        : dropOffImageBlank);\n\n       \n        return (\n            <div className=\"form__container\">\n                <form>\n                    <div>\n                        <img className=\"form__icon\"\n                         src={pickUpChangeIcon} alt=\"icon\" /> \n\n                        <input className=\"form__input--address\"\n                            name='pickUpAddress'\n                            placeholder='Pick up address'\n                            value={pickUpAddress}\n                            onChange={onChange} \n                            onKeyUp={onKeyUp}/>\n                    </div>\n\n                    <br />\n\n                    <div>\n                        <img className=\"form__icon\"\n                            src={dropOffChangeIcon} alt=\"icon\" /> \n\n                        <input className=\"form__input--address\"\n                            name='dropOffAddress'\n                            placeholder='Drop off address'\n                            value={dropOffAddress}\n                            onChange={onChange}\n                            onKeyUp={onKeyUp} />\n                    </div>\n\n                    <br />\n                    <button \n                    className={togleDisabledButton} \n                    disabled={!(isValidPickUp && isValidDropOff)}\n                    onClick={onClick}\n                    >Create a job</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default AddressForm;","export default __webpack_public_path__ + \"static/media/pickUpMarker.5647c56d.svg\";","export default __webpack_public_path__ + \"static/media/dropOffMarker.76797aa2.svg\";","import React, { Component } from 'react';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport pickUpMarker from '../../../src/images/pickUpMarker.svg';\nimport dropOfMarker from '../../../src/images/dropOffMarker.svg';\n\n\nconst mapStyle = {\n    position: 'relative',\n    width: '100%',\n    height: '100%'\n}\n\nexport class MapContainer extends Component {\n    render() {\n        const \n        { pickUpLatitude, pickUpLongitude, dropOffLatitude, dropOffLongitude, pickUpAddress, dropOffAddress } \n        = this.props;\n        \n        return (\n            <Map \n            google={this.props.google} \n            zoom={14} \n            style={mapStyle}\n            center={\n                {\n                    lat: pickUpLatitude, \n                    lng: pickUpLongitude\n                }\n            }\n            initialCenter={\n                {\n                    lat: 48.86982,\n                    lng: 2.334579\n                }\n            }\n            >\n                \n            {pickUpAddress  ?                \n                <Marker onClick={this.onMarkerClick}\n                    name={'Current location'}\n                    position={{ lat: pickUpLatitude, lng: pickUpLongitude }}\n                    icon={{ url: pickUpMarker }}\n                />\n            : null}\n\n            {dropOffAddress  ? \n                <Marker onClick={this.onMarkerClick}\n                    name={'Current location'}\n                    position={{ lat: dropOffLatitude, lng: dropOffLongitude }}\n                    icon={{ url: dropOfMarker }}\n                /> \n            : null}\n\n            </Map>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyC2EOuV5biP5dtQDo9h87O9teXTtaP_JYw'\n})(MapContainer);","import React, { Component } from 'react';\nimport './Toast.scss';\n\nclass ToastContainer extends Component {\n    render() {\n        const { onClick, showToast, hideToast } = this.props\n        \n        return (\n            <div>\n                {!hideToast ? \n                <form onSubmit={this.handlesubmit}>\n                    <input className=\"toast\"\n                        type=\"submit\"\n                        value=\"Job has been created successfully!\"\n                        onClick={onClick} />\n                    {showToast ? <span></span> : null}\n                </form>  \n                : null}\n            </div>\n        );\n    }\n}\n\nexport default ToastContainer;","import React, { Component } from 'react';\nimport AddressForm from './components/AddressForm/AddressForm';\nimport MapContainer from './components/MapContainer/MapContainer';\nimport Toast from './components/Toast/Toast';\n\nimport './App.scss';\n\nconst BASEURL = 'https://stuart-­frontend-­challenge.now.sh';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pickUpAddress:'',\n      dropOffAddress:'',\n\n      pickUpLatitude: '',\n      pickUpLongitude:'',\n\n      dropOffLatitude: '',\n      dropOffLongitude: '',\n\n      isValidPickUp: false,\n      isValidDropOff: false,\n\n      requestCompleted: false,\n      showToast: false,\n      hideToast: false\n    };\n\n    this.handleGeocodeAddress = this.handleGeocodeAddress.bind(this);\n    this.handleCreateJob = this.handleCreateJob.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.showToastWhenJobCreated = this.showToastWhenJobCreated.bind(this);\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  \n  handleGeocodeAddress(event) {\n    const field = event.target;\n    const responseApi = fetch(`${BASEURL}/geocode`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        address: field.value\n      })\n    });\n    responseApi\n      .then(response => response.json())\n      .then(data => {\n          field.name === 'pickUpAddress' && data.code === 'GEOCODE_ERROR' ? \n            this.setState({\n              isValidPickUp: false\n              }) \n        : field.name === 'pickUpAddress' && data.code !== 'GEOCODE_ERROR' ? \n              this.setState({\n                pickUpLatitude: data.latitude,\n                pickUpLongitude: data.longitude,\n                isValidPickUp: true\n              }) \n        : field.name === 'dropOffAddress' && data.code === 'GEOCODE_ERROR' ? \n              this.setState({\n                isValidDropOff: false\n              }) \n        : field.name === 'dropOffAddress' && data.code !== 'GEOCODE_ERROR' ? \n              this.setState({\n                dropOffLatitude: data.latitude,\n                dropOffLongitude: data.longitude,\n                isValidDropOff: true\n                }) \n           : console.log('error')\n        ; })\n    \n    event.preventDefault();\n  }\n\n\n  handleCreateJob(event) {\n    const pickUpAddress = this.state.pickUpAddress\n    const dropOffAddress = this.state.dropOffAddress\n    const responseApi = fetch(`${BASEURL}/jobs`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        pickup: pickUpAddress,\n        dropoff: dropOffAddress\n      })\n    });\n\n    responseApi\n      .then(response => response.json())\n      .then(this.setState({\n        requestCompleted: true,\n        pickUpAddress:'',\n        dropOffAddress:''\n        }) \n      )\n\n    setTimeout(() => this.setState({ hideToast: true }), 5000);\n    event.preventDefault();\n  }\n\n\n  showToastWhenJobCreated() {\n    this.setState({ \n      showToast: true,\n     });\n  }\n\n\n  render() {\n\n    const pickUpAddress = this.state.pickUpAddress;\n    const dropOffAddress = this.state.dropOffAddress;\n    const pickUpLatitude = this.state.pickUpLatitude;\n    const pickUpLongitude = this.state.pickUpLongitude;\n    const dropOffLatitude = this.state.dropOffLatitude;\n    const dropOffLongitude = this.state.dropOffLongitude\n    const isValidPickUp = this.state.isValidPickUp;\n    const isValidDropOff = this.state.isValidDropOff;\n    const requestCompleted = this.state.requestCompleted;\n    const showToast = this.state.showToast;\n    const hideToast = this.state.hideToast;\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <AddressForm    \n          onChange={this.handleInputChange} \n          onKeyUp={this.handleGeocodeAddress}\n          onClick={this.handleCreateJob} \n          pickUpAddress={pickUpAddress}\n          dropOffAddress={dropOffAddress} \n          isValidPickUp={isValidPickUp}\n          isValidDropOff={isValidDropOff}\n          />\n          <MapContainer\n            pickUpLatitude={pickUpLatitude}\n            pickUpLongitude={pickUpLongitude}\n            dropOffLatitude={dropOffLatitude}\n            dropOffLongitude={dropOffLongitude}\n            pickUpAddress={pickUpAddress}\n            dropOffAddress={dropOffAddress}\n          /> \n          {requestCompleted ?\n          <Toast \n              onClick={this.showToastWhenJobCreated}\n              showToast={showToast}\n              hideToast={hideToast}\n          />\n          : null }\n        </header>\n\n      </div>\n    );\n  }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}